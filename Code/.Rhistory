library("dplyr")
library("tidyr")
library("stringr")
# Daten einlesen
titanic <- read.csv("titanic.csv")
titanic_aufbereitet <- titanic %>%
# Extrahiere Titel aus der Namensspalte
mutate(Title = str_extract(titanic$Name, "\\w+(?=\\.)")) %>%
# Transformiere  Survived, Sex und Embarked in factor
mutate(across(c("Survived", "Sex", "Embarked"), as.factor)) %>%
# Transformiere  Pclass in ordered factor
mutate(Pclass = factor(Pclass, ordered = TRUE)) %>%
# Imputiere fehlende Alterswerte (Age) mit Gruppenmittelwert
group_by(Title) %>%
mutate(Age = ifelse(is.na(Age), mean(Age, na.rm = TRUE), Age)) %>%
ungroup () %>%
# Extrahiere und erstelle Deck-Variable
mutate(Deck = str_extract(Cabin, "[A-Za-z](?=[0-9])")) %>%
mutate(Room = gsub(" ", "",gsub("[[:alpha:]]", "", Cabin))) %>% # Hilfsvariable Room
# Extrahiere und erstelle Room-Spalten
separate(Room, into = (c("Room_1", "Room_2", "Room_3", "Room_4")), sep = " ") %>%
mutate(across(c("Room_1", "Room_2", "Room_3", "Room_4"), as.numeric)) %>%
# Bestimmme Seite laut Zimmernummer
mutate(across(c("Room_1", "Room_2", "Room_3", "Room_4"),
function(Room)
ifelse(Room  %% 2 == 1, "Starboard", "Port"))) %>%
# Waehle vorgegebene Spalten aus
select(!c("PassengerId", "Name", "Ticket", "Cabin"))
View(titanic_aufbereitet)
## Grafik 1 - Verteilung Geschlecht
titanic_aufbereitet$Sex
## Grafik 1 - Verteilung Geschlecht
plot(titanic_aufbereitet$Sex)
## Grafik 1 - Verteilung Geschlecht
hist(titanic_aufbereitet$Sex)
## Grafik 1 - Verteilung Geschlecht
titanic_aufbereitet$Sex
## Grafik 1 - Verteilung Geschlecht
table(titanic_aufbereitet$Sex)
## Grafik 1 - Verteilung Geschlecht
plot(table(titanic_aufbereitet$Sex))
## Grafik 1 - Verteilung Geschlecht
hist(table(titanic_aufbereitet$Sex))
## Grafik 1 - Verteilung Geschlecht
plot(table(titanic_aufbereitet$Sex))
## Grafik 2 - Verteilung Embarked
plot(table(titanic_aufbereitet$Embarked)) ### noch schöner machen
View(titanic_aufbereitet)
## Grafik 3 - Verteilung pClass
plot(table(titanic_aufbereitet$Pclass)) ### noch schöner machen
## Grafik 4 - Verteilung survived
plot(table(titanic_aufbereitet$Survived)) ### noch schöner machen
titanic_aufbereitet$Survived
plot(titanic_aufbereitet$Survived, titanic_aufbereitet$Age)
plot(titanic_aufbereitet$Survived, titanic_aufbereitet$Sex)
?cov
cov(titanic_aufbereitet$Survived, titanic_aufbereitet$Sex)
library(ggplot2)
metrisch <- Sex
metrisch <- "Sex"
titanic_aufbereitet$metrisch
rm(metrisch)
metrisch <- titanic_aufbereitet$Age
dichotom <- titanic_aufbereitet$Survived
daten <- data.frame(metrisch, dichotom)
View(daten)
ggplot(daten)
ggplot(daten) +
geom_point()
ggplot(daten) +
aes(x = dichotom, y = metrisch) +
geom_point()
ggplot(daten) +
aes(x = dichotom, y = metrisch) +
geom_boxplot()
metrisch <- titanic_aufbereitet$Fare
daten <- data.frame(metrisch, dichotom)
ggplot(daten) +
aes(x = dichotom, y = metrisch) +
geom_boxplot()
ggplot(daten) +
aes(y = dichotom, x = metrisch) +
geom_boxplot()
View(titanic_aufbereitet)
titanic_aufbereitet$Sex
titanic_aufbereitet$Sex$Levels
daten$dichotom[1]
dichotom = titanic_aufbereitet$Sex
daten <- data.frame(metrisch, dichotom)
daten$
daten[which(daten$dichotom == 1)]
?split
split(daten, date$dichotom)
daten <- data.frame(metrisch, dichotom)
split(daten, date$dichotom)
split(daten, 2)
daten[1,]
which(daten[,2] == daten[1,2])
daten[,2]
daten[1,2]
daten[, which(daten[,2] == daten[1,2])]
dichotomGruppe1 <- daten[which(daten[,2] == daten[1,2]), ]
View(dichotomGruppe1)
dichotomGruppe1 <- daten[which(daten[,2] != daten[1,2]), ]
dichotomGruppe1 <- daten[which(daten[,2] == daten[1,2]), ]
dichotomGruppe2 <- daten[which(daten[,2] != daten[1,2]), ]
577+314
# Mittelwerte gruppiert nach dichotom
mean(dichotomGruppe1)
dichotomGruppe1[,1]
# Mittelwerte gruppiert nach dichotom
mean(dichotomGruppe1[,1])
mean(dichotomGruppe2[,1])
data.frame(colnames("A", "B"))
data.frame(colnames("A", "B"))
data.frame("A", "B")
data.frame("A" = numeric(), "B" = numeric())
data.frame("A" = numeric(), "B" = numeric())$test = c(1,2)
data.frame("A" = numeric(3), "B" = numeric(3))
A <- list()
b <- list()
result <- data.frame(A,B)
B <- list()
result <- data.frame(A,B)
result
result$test <- c(1,1)
View(result)
A <- list("mittel" = 0, "varianz" = 0)
B <- list("mittel" = 0, "varianz" = 0)
result <- data.frame(A,B)
View(result)
rm(A,B,b, result)
result <- matrix(0, nrow = 3, ncol = 2)
View(result)
c(dichotomGruppe1[1,2], dichotomGruppe2[1,2])
colnames(result) <- c(dichotomGruppe1[1,2], dichotomGruppe2[1,2])
result
result <- matrix(0, nrow = 2, ncol = 2)
colnames(result) <- c(dichotomGruppe1[1,2], dichotomGruppe2[1,2])
rownames(result) <- c("mittel", "varianz")
View(result)
result$mittel
result[1,]
result[1,] <- c(mean(dichotomGruppe1[,1]), mean(dichotomGruppe2[,1]))
View(result)
# Varianzen gruppiert nach dichotom
result[2,] <- c(var(dichotomGruppe1[,1]), var(dichotomGruppe2[,1]))
View(result)
sqrt(4)
sqrt(c()4,9)
sqrt(c(4,9))
# standardabweichung gruppiert nach dichotom
result[3,] <- sqrt(result[2,])
result <- matrix(0, nrow = 3, ncol = 2)
rownames(result) <- c("mittel", "varianz", "standardabweichung")
# standardabweichung gruppiert nach dichotom
result[3,] <- sqrt(result[2,])
result[1,] <- c(mean(dichotomGruppe1[,1]), mean(dichotomGruppe2[,1]))
# Varianzen gruppiert nach dichotom
result[2,] <- c(var(dichotomGruppe1[,1]), var(dichotomGruppe2[,1]))
# standardabweichung gruppiert nach dichotom
result[3,] <- sqrt(result[2,])
View(result)
# standardabweichung gruppiert nach dichotom
result[3,] <- c(sd(dichotomGruppe1[,1]), sd(dichotomGruppe2[,1]))
View(result)
View(dichotomGruppe1)
View(titanic)
# Visualisierung
ggplot(daten) +
aes(y = dichotom, x = metrisch) +
geom_point()
metrisch <- titanic_aufbereitet$Age
daten <- data.frame(metrisch, dichotom)
# Visualisierung
ggplot(daten) +
aes(y = dichotom, x = metrisch) +
geom_point()
# Visualisierung
ggplot(daten) +
aes(y = dichotom, x = metrisch) +
geom_boxplot()
